!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Rust	C,constant	/A constant/
!_TAG_KIND_DESCRIPTION!Rust	M,macro	/Macro Definition/
!_TAG_KIND_DESCRIPTION!Rust	P,method	/A method/
!_TAG_KIND_DESCRIPTION!Rust	c,implementation	/implementation/
!_TAG_KIND_DESCRIPTION!Rust	e,enumerator	/An enum variant/
!_TAG_KIND_DESCRIPTION!Rust	f,function	/Function/
!_TAG_KIND_DESCRIPTION!Rust	g,enum	/Enum/
!_TAG_KIND_DESCRIPTION!Rust	i,interface	/trait interface/
!_TAG_KIND_DESCRIPTION!Rust	m,field	/A struct field/
!_TAG_KIND_DESCRIPTION!Rust	n,module	/module/
!_TAG_KIND_DESCRIPTION!Rust	s,struct	/structural type/
!_TAG_KIND_DESCRIPTION!Rust	t,typedef	/Type Alias/
!_TAG_KIND_DESCRIPTION!Rust	v,variable	/Global variable/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Rust	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/a7rs/projects/solana/scalar/cli/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/08e07dc98/
Cli	src/main.rs	/^struct Cli {$/;"	s
Commands	src/main.rs	/^enum Commands {$/;"	g
Deposit	src/main.rs	/^	Deposit(InstructionCommonFields),$/;"	e	enum:Tokenize
Init	src/main.rs	/^	Init(Initialize),$/;"	e	enum:Commands
Initialize	src/main.rs	/^enum Initialize {$/;"	g
InitializeCommonFields	src/main.rs	/^struct InitializeCommonFields {$/;"	s
InstructionCommonFields	src/main.rs	/^struct InstructionCommonFields {$/;"	s
Mints	src/main.rs	/^	Mints(InitializeCommonFields),$/;"	e	enum:Initialize
Principal	src/main.rs	/^	Principal(InstructionCommonFields),$/;"	e	enum:Redeem
Principal	src/main.rs	/^	Principal(InstructionCommonFields),$/;"	e	enum:Tokenize
PrincipalYield	src/main.rs	/^	PrincipalYield(InstructionCommonFields),$/;"	e	enum:Redeem
PrincipalYield	src/main.rs	/^	PrincipalYield(InstructionCommonFields),$/;"	e	enum:Tokenize
Redeem	src/main.rs	/^	Redeem(Redeem),$/;"	e	enum:Commands
Redeem	src/main.rs	/^enum Redeem {$/;"	g
Terminate	src/main.rs	/^	Terminate(Terminate),$/;"	e	enum:Commands
Terminate	src/main.rs	/^	Terminate(TerminateCommonFields),$/;"	e	enum:Terminate
Terminate	src/main.rs	/^enum Terminate {$/;"	g
TerminateCommonFields	src/main.rs	/^struct TerminateCommonFields {$/;"	s
TerminateMints	src/main.rs	/^	TerminateMints(TerminateCommonFields),$/;"	e	enum:Terminate
TerminateTokenizer	src/main.rs	/^	TerminateTokenizer(TerminateCommonFields),$/;"	e	enum:Terminate
Tokenize	src/main.rs	/^	Tokenize(Tokenize),$/;"	e	enum:Commands
Tokenize	src/main.rs	/^enum Tokenize {$/;"	g
Tokenizer	src/main.rs	/^	Tokenizer(InitializeCommonFields),$/;"	e	enum:Initialize
TokenizerMints	src/main.rs	/^	TokenizerMints(InitializeCommonFields),$/;"	e	enum:Initialize
Yield	src/main.rs	/^	Yield(InstructionCommonFields),$/;"	e	enum:Redeem
Yield	src/main.rs	/^	Yield(InstructionCommonFields),$/;"	e	enum:Tokenize
amount	src/main.rs	/^	amount: u64,$/;"	m	struct:InstructionCommonFields
cmd	src/main.rs	/^	cmd: Commands,$/;"	m	struct:Cli
config	src/main.rs	/^	config: Option<String>,$/;"	m	struct:Cli
expiry	src/main.rs	/^	expiry: i64,$/;"	m	struct:InitializeCommonFields
lysergic_tokenizer_address	src/main.rs	/^	lysergic_tokenizer_address: Pubkey,$/;"	m	struct:InstructionCommonFields
lysergic_tokenizer_address	src/main.rs	/^	lysergic_tokenizer_address: Pubkey,$/;"	m	struct:TerminateCommonFields
main	src/main.rs	/^fn main() -> Result<()> {$/;"	f
payer	src/main.rs	/^	payer: Option<String>,$/;"	m	struct:Cli
rpc	src/main.rs	/^	rpc: Option<String>,$/;"	m	struct:Cli
underlying_mint_address	src/main.rs	/^	underlying_mint_address: Pubkey,$/;"	m	struct:InitializeCommonFields
underlying_mint_address	src/main.rs	/^	underlying_mint_address: Pubkey,$/;"	m	struct:InstructionCommonFields
underlying_mint_address	src/main.rs	/^	underlying_mint_address: Pubkey,$/;"	m	struct:TerminateCommonFields
